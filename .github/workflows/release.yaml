name: PdfDing Release

on:
  release:
    types:
      - released

jobs:
  publish_release:
    name: Publish release
    # Don't run for release created by the chart-releaser-action
    if: ${{ ! startsWith(github.ref, 'refs/tags/pdfding') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: mrmn
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: |
            CI_COMMIT_TAG=${{ github.event.release.tag_name }}
          push: true
          tags: |
            mrmn/pdfding:${{ github.event.release.tag_name }}
            mrmn/pdfding:latest
          platforms: linux/amd64,linux/arm64
  update_files:
    name: Update files after release
    # Don't run for release created by the chart-releaser-action
    if: ${{ ! startsWith(github.ref, 'refs/tags/pdfding') }}
    runs-on: ubuntu-latest
    needs: publish_release
    steps:
      # we need to use a gh app as the default actions github_token cannot trigger further workflows
      # like e.g. the chart release workflow which should be running afterwards
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.PDFDING_APP_ID }}
          private-key: ${{ secrets.PDFDING_PEM_KEY }}
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.repository.default_branch }}
          token: ${{ steps.app-token.outputs.token }}
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Update files
        run: |
          python .github/workflows/scripts/update_files_after_release.py \
            --release_tag "${{ github.event.release.tag_name }}" \
            --release_body "${{ github.event.release.body }}" \
            --changelog_path "CHANGELOG.MD" \
            --chart_yaml_path "helm-charts/pdfding/Chart.yaml"
      - name: Commit and push changes
        run: |
          git config --local user.email "197665213+pdfding[bot]@users.noreply.github.com"
          git config --local user.name "pdfding[bot]"
          git add CHANGELOG.MD helm-charts/pdfding/Chart.yaml
          git commit -m "chore: update files for release ${{ github.event.release.tag_name }}"
          git push
